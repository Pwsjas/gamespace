@page "/search"
@inject HttpClient httpClient
@rendermode InteractiveServer
<PageTitle>Search</PageTitle>

<section class="search-container">
    <GenreSelection @ref="genreSelectionRef"/>
    <PlatformSelection @ref="platformSelectionRef"/>
    <input @bind="inputValue" class="search-input" type="text" id="fname" name="fname" placeholder="Title">
    <button @onclick=SearchGames>Search</button>
</section>

@code {
    [Parameter]
    public string genre { get; set; } = "";
    [Parameter]
    public string platform { get; set; } = "";
    [Parameter]
    public string searchString { get; set; } = "";
    private List<string> selectionGenres { get; set; } = new List<string>();
    private List<string> selectionPlatforms { get; set; } = new List<string>();
    public string inputValue { get; set; } = "";

    private GenreSelection genreSelectionRef;
    private async Task RequestGenreSelections() {
        selectionGenres = genreSelectionRef.ReturnSelectedList();
    }

    private PlatformSelection platformSelectionRef;
    private async Task RequestPlatformSelections() {
        selectionPlatforms = platformSelectionRef.ReturnSelectedList();
    }

    public class SearchRequest {
        public List<string> genres { get; set; } = new List<string>();
        public List<string> platforms { get; set; } = new List<string>();
        public string search { get; set; } = "";
    }

    private async Task SearchGames() {
        RequestGenreSelections();
        RequestPlatformSelections();

        var JSONRequest = new SearchRequest {
            genres = selectionGenres,
            platforms = selectionPlatforms,
            search = inputValue
        };

        Console.WriteLine(string.Join(",", JSONRequest.genres));
        Console.WriteLine(string.Join(",", JSONRequest.platforms));
        Console.WriteLine(JSONRequest.search);
    }

    protected override async Task OnInitializedAsync()
    {

    }
}