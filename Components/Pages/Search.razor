@page "/search"
@inject HttpClient httpClient
@rendermode InteractiveServer
<PageTitle>Search</PageTitle>

<section class="search-container">
    <GenreSelection @ref="genreSelectionRef"/>
    <PlatformSelection @ref="platformSelectionRef"/>
    <input @bind="inputValue" class="search-input" type="text" id="fname" name="fname" placeholder="Title">
    <button @onclick=SearchGames>Search</button>

    @if(searched == true) {
        <GameCardContainer SearchedGames="games"/>
    }
</section>

@code {
    [Parameter]
    public string genre { get; set; } = "";
    [Parameter]
    public string platform { get; set; } = "";
    [Parameter]
    public string searchString { get; set; } = "";
    private List<string> selectionGenres { get; set; } = new List<string>();
    private List<string> selectionPlatforms { get; set; } = new List<string>();
    public string inputValue { get; set; } = "";
    public bool searched = false;
    public List<Game> games = new List<Game>();

    private GenreSelection genreSelectionRef;
    private async Task RequestGenreSelections() {
        selectionGenres = genreSelectionRef.ReturnSelectedList();
    }

    private PlatformSelection platformSelectionRef;
    private async Task RequestPlatformSelections() {
        selectionPlatforms = platformSelectionRef.ReturnSelectedList();
    }

    private async Task SearchGames() {
        searched = false;
        RequestGenreSelections();
        RequestPlatformSelections();

        var requestObject = new SearchRequest {
            Genres = selectionGenres,
            Platforms = selectionPlatforms,
            Search = inputValue
        };

        var jsonRequest = JsonSerializer.Serialize(requestObject);
        var content = new StringContent(jsonRequest, Encoding.UTF8, "application/json");

        var response = await httpClient.PostAsync($"http://localhost:5249/search", content);

        if (response.IsSuccessStatusCode)
        {
            games = await response.Content.ReadFromJsonAsync<List<Game>>();
            searched = true;
        }
        else
        {
            // Handle error
        }
    }

    protected override async Task OnInitializedAsync()
    {

    }
}