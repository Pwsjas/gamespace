@inject HttpClient httpClient


<div class="game-card-container">
    @if (games != null && games.Count() > 0) {
        for (int i = 0; i < games.Count(); i++) {
            //Add a Genres null check here, and then remove genres if the data doesn't exist.
            if(games[i].Cover != null && games[i]?.Genres?.Any() == true) {
                <GameCard id="@games[i].Id" gameName=@games[i].Name thumbnail=@games[i].Cover.Image_Id rating=@games[i].Rating genre=@games[i].Genres.FirstOrDefault().Name/>
            }
        }
    }
    else {
        <p>Loading</p>
    }
</div>

@code {
    [Parameter]
    public string Endpoint {get; set;} = "";
    [Parameter]
    public List<int> IDList {get; set;} = new List<int>();
    [Parameter]
    public List<Game> SearchedGames { get; set; } = new List<Game>();

    //call backend for gamedata
    private List<Game>? games = new List<Game>();

    public class SimilarGamesList {
        public List<int> ids { get; set; } = new List<int>();
    }

    protected override async Task OnInitializedAsync()
    {
        if(IDList != null && IDList.Count() > 0) {
            var requestObject = new SimilarGamesList { ids = IDList };
            //POST endpoints
            var jsonRequest = JsonSerializer.Serialize(requestObject);
            var content = new StringContent(jsonRequest, Encoding.UTF8, "application/json");

            var response = await httpClient.PostAsync($"http://localhost:5249/{Endpoint}", content);

            if (response.IsSuccessStatusCode)
            {
                games = await response.Content.ReadFromJsonAsync<List<Game>>();
                Console.WriteLine(games);
                for (int i = 0; i < games.Count(); i++) {
                    Console.WriteLine(games[i].Name);
                }
            }
            else
            {
                // Handle error
            }
        } else if(SearchedGames != null && SearchedGames.Count() > 0) {
            games = SearchedGames;
        } else {
            //GET endpoints
            var response = await httpClient.GetAsync($"http://localhost:5249/{Endpoint}");
            if (response.IsSuccessStatusCode)
            {
                games = await response.Content.ReadFromJsonAsync<List<Game>>();
                for (int i = 0; i < games.Count(); i++) {
                    Console.WriteLine(games[i].Name);
                }
            }
            else
            {
                // Handle error
            }
        }
    }

}